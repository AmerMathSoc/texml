#!/usr/bin/perl -w

use strict;
use warnings;

use lib qw(/ams/texmf/texml/lib/perl);

use TeX::FMT::File;

my $file = shift || 'plain.fmt';

my $fmt = TeX::FMT::File->new({ file_name => $file });

$fmt->open('r');

$fmt->load();

# $fmt->debug();

$fmt->show_meaning('AA');

$fmt->show_meaning("setbox");

$fmt->show_meaning("the");

exit 0;

# $fmt->show_meaning("begin");
# $fmt->show_meaning("bf");
# $fmt->show_meaning("tenit");
# $fmt->show_meaning("proclaim");
# $fmt->show_meaning("beginsection");
# $fmt->show_meaning("textindent");
# $fmt->show_meaning("input");
# $fmt->show_meaning("endinput");

$fmt->show_meaning("hyphenpenalty");
$fmt->show_meaning("pretolerance");
$fmt->show_meaning("escapechar");

my @DIMEN_PARAM = qw(parindent mathsurround lineskiplimit hsize vsize
                     maxdepth splitmaxdepth boxmaxdepth hfuzz vfuzz
                     delimitershortfall nulldelimiterspace scriptspace
                     predisplaysize displaywidth displayindent
                     overfullrule hangindent hoffset voffset
                     emergencystretch);

for my $param (@DIMEN_PARAM) {
    $fmt->show_meaning($param);
}

# $fmt->show_meaning("sum");
# 
# $fmt->show_meaning("mathunder");
# $fmt->show_meaning("mathover");
# 
# $fmt->show_meaning("underline");
# $fmt->show_meaning("overline");

__END__
